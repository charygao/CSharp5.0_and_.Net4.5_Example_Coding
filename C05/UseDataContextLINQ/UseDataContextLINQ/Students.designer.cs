#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Students")]
	public partial class StudenDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertStudents(Students instance);
    partial void UpdateStudents(Students instance);
    partial void DeleteStudents(Students instance);
    partial void InsertScores(Scores instance);
    partial void UpdateScores(Scores instance);
    partial void DeleteScores(Scores instance);
    #endregion
		
		public StudenDataContext() : 
				base(global::ConsoleApplication1.Properties.Settings.Default.StudentsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StudenDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudenDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudenDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudenDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Students> Students
		{
			get
			{
				return this.GetTable<Students>();
			}
		}
		
		public System.Data.Linq.Table<Scores> Scores
		{
			get
			{
				return this.GetTable<Scores>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students")]
	public partial class Students : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _XingBie;
		
		private int _Age;
		
		private int _ScoreID;
		
		private EntityRef<Scores> _Scores;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnXingBieChanging(string value);
    partial void OnXingBieChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnScoreIDChanging(int value);
    partial void OnScoreIDChanged();
    #endregion
		
		public Students()
		{
			this._Scores = default(EntityRef<Scores>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XingBie", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string XingBie
		{
			get
			{
				return this._XingBie;
			}
			set
			{
				if ((this._XingBie != value))
				{
					this.OnXingBieChanging(value);
					this.SendPropertyChanging();
					this._XingBie = value;
					this.SendPropertyChanged("XingBie");
					this.OnXingBieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreID", DbType="Int NOT NULL")]
		public int ScoreID
		{
			get
			{
				return this._ScoreID;
			}
			set
			{
				if ((this._ScoreID != value))
				{
					if (this._Scores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScoreIDChanging(value);
					this.SendPropertyChanging();
					this._ScoreID = value;
					this.SendPropertyChanged("ScoreID");
					this.OnScoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scores_Students", Storage="_Scores", ThisKey="ScoreID", OtherKey="ScoreID", IsForeignKey=true)]
		public Scores Scores
		{
			get
			{
				return this._Scores.Entity;
			}
			set
			{
				Scores previousValue = this._Scores.Entity;
				if (((previousValue != value) 
							|| (this._Scores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scores.Entity = null;
						previousValue.Students = null;
					}
					this._Scores.Entity = value;
					if ((value != null))
					{
						value.Students = this;
						this._ScoreID = value.ScoreID;
					}
					else
					{
						this._ScoreID = default(int);
					}
					this.SendPropertyChanged("Scores");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scores")]
	public partial class Scores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScoreID;
		
		private int _Chinese;
		
		private int _Math;
		
		private int _English;
		
		private EntityRef<Students> _Students;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScoreIDChanging(int value);
    partial void OnScoreIDChanged();
    partial void OnChineseChanging(int value);
    partial void OnChineseChanged();
    partial void OnMathChanging(int value);
    partial void OnMathChanged();
    partial void OnEnglishChanging(int value);
    partial void OnEnglishChanged();
    #endregion
		
		public Scores()
		{
			this._Students = default(EntityRef<Students>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ScoreID
		{
			get
			{
				return this._ScoreID;
			}
			set
			{
				if ((this._ScoreID != value))
				{
					this.OnScoreIDChanging(value);
					this.SendPropertyChanging();
					this._ScoreID = value;
					this.SendPropertyChanged("ScoreID");
					this.OnScoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chinese", DbType="Int NOT NULL")]
		public int Chinese
		{
			get
			{
				return this._Chinese;
			}
			set
			{
				if ((this._Chinese != value))
				{
					this.OnChineseChanging(value);
					this.SendPropertyChanging();
					this._Chinese = value;
					this.SendPropertyChanged("Chinese");
					this.OnChineseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Math", DbType="Int NOT NULL")]
		public int Math
		{
			get
			{
				return this._Math;
			}
			set
			{
				if ((this._Math != value))
				{
					this.OnMathChanging(value);
					this.SendPropertyChanging();
					this._Math = value;
					this.SendPropertyChanged("Math");
					this.OnMathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_English", DbType="Int NOT NULL")]
		public int English
		{
			get
			{
				return this._English;
			}
			set
			{
				if ((this._English != value))
				{
					this.OnEnglishChanging(value);
					this.SendPropertyChanging();
					this._English = value;
					this.SendPropertyChanged("English");
					this.OnEnglishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scores_Students", Storage="_Students", ThisKey="ScoreID", OtherKey="ScoreID", IsUnique=true, IsForeignKey=false)]
		public Students Students
		{
			get
			{
				return this._Students.Entity;
			}
			set
			{
				Students previousValue = this._Students.Entity;
				if (((previousValue != value) 
							|| (this._Students.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Students.Entity = null;
						previousValue.Scores = null;
					}
					this._Students.Entity = value;
					if ((value != null))
					{
						value.Scores = this;
					}
					this.SendPropertyChanged("Students");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
